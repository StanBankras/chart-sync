{"version":3,"sources":["../../server/modules/roomevents.js"],"names":["joinRoom","io","socket","roomId","username","to","id","emit","room","rooms","join","users","filter","u","push","user","leaveRoom","leave","disconnectClient","Object","keys","find","key"],"mappings":"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","sourcesContent":["import { rooms } from '../server';\n\nexport function joinRoom(io, socket, roomId, username) {\n  if(!roomId) return io.to(socket.id).emit('joined', { roomId: 'NO_ID' });\n  const room = rooms[roomId];\n  if(!room) return io.to(socket.id).emit('joined', { roomId: 'NO_ROOM_WITH_ID' });\n\n  socket.join(roomId);\n  if(room.users) {\n    room.users = room.users.filter(u => u.username !== username);\n    room.users.push({ id: socket.id, username });\n    io.to(roomId).emit('new_user', { roomId, user: { id: socket.id, username } });\n  } else {\n    room.users = [{ id: socket.id, username }];\n    io.to(roomId).emit('new_user', { roomId, user: { id: socket.id, username } });\n  }\n  io.to(socket.id).emit('joined', room);\n}\n\nexport function leaveRoom(io, socket, roomId) {\n  socket.leave(roomId);\n\n  const room = rooms[roomId];\n  if(room && room.users) {\n    room.users = room.users.filter(u => u.id !== socket.id);\n    io.to(roomId).emit('remove_user', { roomId, id: socket.id });\n  }\n}\n\nexport function disconnectClient(io, socket) {\n  const roomId = Object.keys(rooms).find(key => rooms[key].users ? rooms[key].users.find(u => u.id === socket.id) : false);\n  if(roomId) {\n    io.to(roomId).emit('remove_user', { roomId, id: socket.id });\n  }\n}"],"file":"roomevents.js"}